version: '3.8'
services:
  airflow:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./dags:/opt/airflow/dags
      - ./spark_jobs:/opt/spark_jobs
    ports:
      - "8080:8080"
    environment:
      - AIRFLOW__CORE__EXECUTOR=SequentialExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    depends_on:
      - postgres
    command: >
      bash -c "airflow db init &&
               airflow users create --username admin --firstname Admin --lastname Admin --role Admin --email admin@example.com --password admin &&
               airflow webserver --port 8080 & airflow scheduler"
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 5s
      timeout: 5s
      retries: 5
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  minio:
    image: minio/minio:RELEASE.2023-09-04T19-57-37Z
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    command: server /data --console-address ":9001"
  spark:
    build:
      context: .
      dockerfile: Dockerfile.spark
    ports:
      - "8081:8081"
      - "7077:7077"
    volumes:
      - ./spark_jobs:/opt/spark_jobs
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark
      - SPARK_MASTER_PORT=7077
  spark-worker:
    build:
      context: .
      dockerfile: Dockerfile.spark
    volumes:
      - ./spark_jobs:/opt/spark_jobs
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_CORES=2
      - SPARK_WORKER_MEMORY=4g
      - SPARK_WORKER_WEBUI_PORT=8082
    depends_on:
      - spark
    ports:
      - "8083:8082"
  trino:
    image: trinodb/trino:428
    ports:
      - "8082:8080"
    volumes:
      - ./trino_catalog:/etc/trino/catalog
  opensearch:
      image: opensearchproject/opensearch:2.9.0
      ports:
        - "9200:9200"
      environment:
        - discovery.type=single-node
        - "OPENSEARCH_JAVA_OPTS=-Xms2g -Xmx2g"
        - "plugins.security.disabled=true"
      volumes:
        - opensearch_data:/usr/share/opensearch/data
      healthcheck:
        test: ["CMD", "curl", "-s", "http://localhost:9200"]
        interval: 30s
        timeout: 10s
        retries: 5
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.9.0
    ports:
      - "5601:5601"
    environment:
      - OPENSEARCH_HOSTS=["http://opensearch:9200"]
      - DISABLE_SECURITY_DASHBOARDS_PLUGIN=true
    depends_on:
      opensearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-s", "http://opensearch:9200"]
      interval: 30s
      timeout: 10s
      retries: 5
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.jupyter
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./scripts:/home/jovyan/work/scripts
      - ./certs/ca/ca.pem:/home/jovyan/certs/ca.pem:ro
volumes:
  postgres_data:
  opensearch_data: